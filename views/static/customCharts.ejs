<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <meta name="description" content="Examples for custom charts.">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0"/>
    <title>cStats - 自定义图表</title>

    <!-- CSS  -->
    <link href="/css/icon.css" rel="stylesheet">
    <link href="/stylesheets/materialize.min.css" type="text/css" rel="stylesheet"
          media="screen,projection"/>
    <link href="/stylesheets/style.css" type="text/css" rel="stylesheet" media="screen,projection"/>
</head>
<body>

<% include ../templates/navigation.ejs %>
<main>
    <div class="container">
        <br>
        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <h3 class="center <%= customColor1 %>-text">基础</h3>
                    添加自定义图表到你的插件中包含2个步骤<br>
                    <ul class="browser-default" style="padding-left: 25px">
                        <li>添加代码到你的插件中</li>
                        <li>在网站上新建图表</li>
                    </ul>
                    你需要登录并点击在你的插件页面的编辑按钮
                    <br>
                    <img src="https://static.zhanshi123.me/cstats/1.png" style="border:1px solid gray;width:100%;height:100%;max-width:373px;max-height:135px">
                    <br>
                    然后添加你的图表
                    <br>
                    <img src="https://static.zhanshi123.me/cstats/2.png" style="border:1px solid gray;width:100%;height:100%;max-width:1183px;max-height:497px">
                    <br>
                    由图可见非常容易
                </div>
            </div>
        </div>
        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <h3 class="center <%= customColor1 %>-text">饼状图</h3>
                    <div class="row">
                        <div id="onlineMode" class="col s12">
                            <div id="onlineModePie" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                        </div>
                    </div>
                    <b>简单饼状图</b>是一种最基础的图表。对于一个服务器一个值的图表来说，是非常好的选择。添加代码到你的插件中非常简单
                    <script src="https://gist.github.com/Bastian/6ed19dae0322881af4f3dab87075397f.js"></script>
                    如果你需要一个有更多信息的饼状图，可以使用<b>高级饼状图</b>,
                    你可以给不同的值不同的'权重'。但是这只有极少数情况需要这种图标，下面是一个不恰当的例子
                    <script src="https://gist.github.com/Bastian/b47279b4ff792153480b50ad0945c963.js"></script>
                </div>
            </div>
        </div>
        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <h3 class="center <%= customColor1 %>-text">下钻式饼状图(原文:Drilldown Pie 实在没有合适的中文来翻译，所以暂且译作 下钻式饼状图)</h3>
                    <div class="row">
                        <div id="os" class="col s12">
                            <div id="osPie" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                        </div>
                    </div>
                    <b>下钻式饼状图</b>是最6的一种饼状图，他对于展示复杂数据来说是个非常棒的选择，相反，如果使用一般的饼状图，则会展示得一团糟。因为他的复杂性，所以创建它的代码看起来会有点呆
                    <script src="https://gist.github.com/Bastian/b35de0cfe951f2d7cacabf65762bfb3d.js"></script>
                </div>
            </div>
        </div>
        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <h3 class="center <%= customColor1 %>-text">折线图</h3>
                    <div class="row">
                        <div id="players">
                            <div id="playersLineChart" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                        </div>
                    </div>
                    <b>单线折线图</b>正如它的名字一样:一个只有一条线的折线图。这种图表的例子是，每个插件的用数量和玩家数量。实现单线折线图的代码和简单饼状图的代码一样简单
                    <script src="https://gist.github.com/Bastian/ea8804db0479c539153f53f1561cc7d3.js"></script>
                    现在是你的回合，你认为<b>多线折线图</b>是什么？对！多线折线图是一个由很多条线的折线图（译者注：这不是废话嘛。。）
                    <script src="https://gist.github.com/Bastian/4445ea82bc921dfef82de90b535deb3e.js"></script>
                    (注意: 多线折线图还在开发中)
                </div>
            </div>
        </div>
        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <h3 class="center <%= customColor1 %>-text">柱状图</h3>
                    <div class="row">
                        <div id="example" class="col s12">
                            <div id="exampleBar" style="min-width: 310px; margin: 0 auto"></div>
                        </div>
                    </div>
                    <p>一个<b>简单柱状图</b>代表一种只有一个分类的柱状图。在这个Map中的K是分类名，V是数值（大多数情况下你希望是1）</p>
                    <p>一个<b>高级柱状图</b>代表一种每种分类都可以有多个柱状图的图表（在创建时需要定义）
                    Map中的K是分类名，V是每个柱状图的数值的Map（同简单柱状图）
                    下面是一个例子</p>
                    <script src="https://gist.github.com/Bastian/474cf7eb3c2997d3cab73e560dce0caa.js"></script>
                </div>
            </div>
        </div>
    </div>
</main>
<% include ../templates/footer.ejs %>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<!-- Materialize -->
<script src="/javascripts/materialize/materialize.min.js"></script>
<script src="/javascripts/materialize/init.js"></script>
<!-- Charts -->
<script src="https://code.highcharts.com/stock/6.0.1/highstock.js"></script>
<script src="https://code.highcharts.com/maps/6.0.1/modules/map.js"></script>
<script src="https://code.highcharts.com/6.0.1/modules/exporting.js"></script>
<script src="https://code.highcharts.com/6.0.1/modules/no-data-to-display.js"></script>
<script src="/javascripts/charts/themes/chartTheme.js"></script> <!-- The chart theme -->
<script src="/javascripts/charts/charts.js"></script> <!-- The charts -->
<script type="application/javascript">
    function getPluginId() {
        return '1';
    }
    Highcharts.wrap(Highcharts.Chart.prototype, 'getContainer', function (proceed) {
        proceed.call(this);
        this.container.style.background = '';
    });

    var data = {
        valueName: 'Servers',
        categories: ['Feature 1', 'Feature 2'],
        series: [{
            name: 'disabled',
            data: [1337, 226]
        }, {
            name: 'enabled',
            data: [123, 1234]
        }]
    }
    $('#exampleBar').highcharts({
        chart: {
            type: 'bar',
            renderTo: 'container',
            marginTop: 40,
            marginBottom: 80,
            height: data.categories.length * data.series.length * (30 + data.series.length * 15) + 120 // 20px per data item plus top and bottom margins
        },
        title: {
            text: '<a href="#example" style="text-decoration: none; color: inherit;">Example Bar Chart</a>'
        },
        plotOptions: {
            bar: {
                dataLabels: {
                    enabled: true
                }
            },
            series: {
                pointWidth: 25
            }
        },
        tooltip: {
            headerFormat: '<span style="font-size: 18px"><u><b>{point.key}</b></u></span><br/>',
            pointFormat: '<b>Total</b>: {point.y} ' + data.valueName
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'top',
            x: -40,
            y: 80,
            floating: true,
            borderWidth: 1,
            backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),
            shadow: true
        },
        exporting: {
            enabled: false
        },
        yAxis: {
            min: 0,
            title: {
                text: data.valueName,
                align: 'high'
            },
            labels: {
                overflow: 'justify'
            }
        },
        xAxis: {
            categories: data.categories
        },
        series: data.series
    });
</script>

<script type="application/javascript">
    function getPluginId() {
        return "1";
    }

    function updatePlayersBadge(data) {
    }

    function updateServersBadge(data) {
    }
</script>

<% include ../templates/globalScripts.ejs %>

</body>
</html>
